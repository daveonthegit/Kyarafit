version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: kyarafit
      POSTGRES_USER: kyarafit
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kyarafit"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://kyarafit:password@postgres:5432/kyarafit?sslmode=disable
      - IMAGE_SERVICE_URL=http://image-service:8001
      - JWT_SECRET=your-super-secret-jwt-key-here
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: go run main.go

  # Python Image Processing Service
  image-service:
    build:
      context: ./image-service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - HOST=0.0.0.0
      - PORT=8001
      - UPLOAD_DIR=uploads
      - PROCESSED_DIR=processed
    volumes:
      - ./image-service:/app
      - image_uploads:/app/uploads
      - image_processed:/app/processed
    command: uvicorn main:app --host 0.0.0.0 --port 8001 --reload

volumes:
  postgres_data:
  image_uploads:
  image_processed:
